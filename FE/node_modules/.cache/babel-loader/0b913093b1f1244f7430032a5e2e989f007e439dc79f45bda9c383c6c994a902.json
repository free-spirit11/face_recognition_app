{"ast":null,"code":"var _jsxFileName = \"/home/serhii/Desktop/Programming/Course/Projects/facerecognitionapp/face_recognition_app/FE/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticleComponent from './components/ParticleComponent';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifyRequestOptions = imageUrl => {\n  const PAT = '6b5531d9b2f14276a32e427457a4bb8c';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = '4uf03bwvpmyq';\n  const APP_ID = 'my-first-application';\n  // Change these to whatever model and image URL you want to use\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    this.calculateFaceLocation = result => {\n      const regions = result.outputs[0].data.regions;\n      const boxes = [];\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      regions.forEach(region => {\n        const box = {};\n        const boundingBox = region.region_info.bounding_box;\n        box.topRow = (boundingBox.top_row * height).toFixed(3);\n        box.leftCol = (boundingBox.left_col * width).toFixed(3);\n        box.bottomRow = (height * boundingBox.bottom_row).toFixed(3);\n        box.rightCol = (width * boundingBox.right_col).toFixed(3);\n        boxes.push(box);\n      });\n      return boxes;\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", returnClarifyRequestOptions(this.state.input)).then(response => response.json()).then(result => {\n        if (result) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n        this.displayFaceBox(this.calculateFaceLocation(result));\n      }).catch(error => console.log('error', error));\n      ;\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: [],\n      route: 'signing',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticleComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: isSignedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          boxes: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 23\n      }, this) : route === 'signing' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","ParticleComponent","FaceRecognition","Signin","Register","jsxDEV","_jsxDEV","returnClarifyRequestOptions","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","result","regions","outputs","boxes","image","document","getElementById","width","Number","height","forEach","region","box","boundingBox","region_info","bounding_box","topRow","top_row","toFixed","leftCol","left_col","bottomRow","bottom_row","rightCol","right_col","push","displayFaceBox","onInputChange","event","input","target","value","onButtonSubmit","state","fetch","then","response","json","count","Object","assign","catch","error","console","log","onRouteChange","route","isSignedIn","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/serhii/Desktop/Programming/Course/Projects/facerecognitionapp/face_recognition_app/FE/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticleComponent from './components/ParticleComponent';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\n\n\nconst returnClarifyRequestOptions = (imageUrl) => {\n    const PAT = '6b5531d9b2f14276a32e427457a4bb8c';\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = '4uf03bwvpmyq';\n    const APP_ID = 'my-first-application';\n    // Change these to whatever model and image URL you want to use\n    const IMAGE_URL = imageUrl;\n\n    const raw = JSON.stringify({\n        \"user_app_id\": {\n            \"user_id\": USER_ID,\n            \"app_id\": APP_ID\n        },\n        \"inputs\": [\n            {\n                \"data\": {\n                    \"image\": {\n                        \"url\": IMAGE_URL\n                    }\n                }\n            }\n        ]\n    });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': 'Key ' + PAT\n        },\n        body: raw\n    };\n\n    return requestOptions;\n}\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            input: '',\n            imageUrl: '',\n            box: [],\n            route: 'signing',\n            isSignedIn: false,\n            user: {\n                id: '',\n                name: '',\n                email: '',\n                entries: 0,\n                joined: ''\n            }\n        }\n    }\n\n    loadUser = (data) => {\n        this.setState({\n            user: {\n                id: data.id,\n                name: data.name,\n                email: data.email,\n                entries: data.entries,\n                joined: data.joined\n            }\n        })\n    }\n\n    calculateFaceLocation = (result) => {\n        const regions = result.outputs[0].data.regions;\n        const boxes = [];\n\n        const image = document.getElementById('inputimage');\n        const width = Number(image.width);\n        const height = Number(image.height);\n\n        regions.forEach(region => {\n\n            const box = {};\n            const boundingBox = region.region_info.bounding_box;\n            box.topRow = (boundingBox.top_row * height).toFixed(3);\n            box.leftCol = (boundingBox.left_col * width).toFixed(3);\n            box.bottomRow = (height * boundingBox.bottom_row).toFixed(3);\n            box.rightCol = (width * boundingBox.right_col).toFixed(3);\n            boxes.push(box);\n        });\n        return boxes;\n    }\n\n    displayFaceBox = (box) => {\n        this.setState({ box: box });\n    }\n\n    onInputChange = (event) => {\n        this.setState({ input: event.target.value });\n    }\n\n    onButtonSubmit = () => {\n        this.setState({ imageUrl: this.state.input });\n        fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", returnClarifyRequestOptions(this.state.input))\n            .then(response => response.json())\n            .then(result => {\n                if (result) {\n                    fetch('http://localhost:3000/image', {\n                        method: 'put',\n                        headers: { 'Content-Type': 'application/json' },\n                        body: JSON.stringify({\n                            id: this.state.user.id\n                        })\n                    })\n                        .then(response => response.json())\n                        .then(count => {\n                            this.setState(Object.assign(this.state.user, { entries: count }));\n                        })\n                }\n                this.displayFaceBox(this.calculateFaceLocation(result));\n            })\n            .catch(error => console.log('error', error));;\n    }\n\n    onRouteChange = (route) => {\n        if (route === 'signout') {\n            this.setState({ isSignedIn: false })\n        } else if (route === 'home') {\n            this.setState({ isSignedIn: true })\n        }\n        this.setState({ route: route });\n    }\n\n    render() {\n        const { isSignedIn, imageUrl, route, box } = this.state;\n        return (\n            <div className=\"App\">\n                <ParticleComponent />\n                <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n                <Logo />\n                {route === 'home'\n                    ? <div>\n                        <Rank name={this.state.user.name} entries={this.state.user.entries} />\n                        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n                        <FaceRecognition boxes={box} imageUrl={imageUrl} />\n                    </div>\n                    : (\n                        route === 'signing'\n                            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n                            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}