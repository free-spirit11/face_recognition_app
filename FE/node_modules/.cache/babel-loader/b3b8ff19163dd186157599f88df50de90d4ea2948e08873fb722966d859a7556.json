{"ast":null,"code":"var _jsxFileName = \"/home/serhii/Desktop/Programming/Course/Projects/facerecognitionapp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticleComponent from './components/ParticleComponent';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifyRequestOptions = imageUrl => {\n  const PAT = '6b5531d9b2f14276a32e427457a4bb8c';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = '4uf03bwvpmyq';\n  const APP_ID = 'my-first-application';\n  // Change these to whatever model and image URL you want to use\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = result => {\n      const regions = result.outputs[0].data.regions;\n      console.log(\"regions\", regions);\n      const boxes = [];\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      regions.forEach(region => {\n        const box = {};\n        const boundingBox = region.region_info.bounding_box;\n        box.topRow = (boundingBox.top_row * height).toFixed(3);\n        box.leftCol = (boundingBox.left_col * width).toFixed(3);\n        box.bottomRow = (height * boundingBox.bottom_row).toFixed(3);\n        box.rightCol = (width * boundingBox.right_col).toFixed(3);\n        boxes.push(box);\n      });\n      console.log(\"calculateFaceLocation boxes: \", boxes);\n      return boxes;\n    };\n    this.displayFaceBox = box => {\n      console.log(\"displayFaceBox received box: \", box);\n      console.log(\"displayFaceBox this.state.box before state change: \", this.state.box);\n      // this.setState({ box: box });\n      this.setState({\n        box\n      }, () => {\n        console.log(\"displayFaceBox this.state.box after setState: \", this.state.box);\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", returnClarifyRequestOptions(this.state.input)).then(response => response.json()).then(result => {\n        this.displayFaceBox(this.calculateFaceLocation(result));\n      }).catch(error => console.log('error', error));\n      ;\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: []\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticleComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Signin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        boxes: this.state.box,\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","ParticleComponent","FaceRecognition","Signin","jsxDEV","_jsxDEV","returnClarifyRequestOptions","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","calculateFaceLocation","result","regions","outputs","data","console","log","boxes","image","document","getElementById","width","Number","height","forEach","region","box","boundingBox","region_info","bounding_box","topRow","top_row","toFixed","leftCol","left_col","bottomRow","bottom_row","rightCol","right_col","push","displayFaceBox","state","setState","onInputChange","event","input","target","value","onButtonSubmit","fetch","then","response","json","catch","error","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/serhii/Desktop/Programming/Course/Projects/facerecognitionapp/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticleComponent from './components/ParticleComponent';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\n\n\nconst returnClarifyRequestOptions = (imageUrl) => {\n    const PAT = '6b5531d9b2f14276a32e427457a4bb8c';\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = '4uf03bwvpmyq';\n    const APP_ID = 'my-first-application';\n    // Change these to whatever model and image URL you want to use\n    const IMAGE_URL = imageUrl;\n\n    const raw = JSON.stringify({\n        \"user_app_id\": {\n            \"user_id\": USER_ID,\n            \"app_id\": APP_ID\n        },\n        \"inputs\": [\n            {\n                \"data\": {\n                    \"image\": {\n                        \"url\": IMAGE_URL\n                    }\n                }\n            }\n        ]\n    });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': 'Key ' + PAT\n        },\n        body: raw\n    };\n\n    return requestOptions;\n}\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            input: '',\n            imageUrl: '',\n            box: []\n        }\n    }\n\n    calculateFaceLocation = (result) => {\n        const regions = result.outputs[0].data.regions;\n        console.log(\"regions\",regions);\n        const boxes = [];\n\n        const image = document.getElementById('inputimage');\n        const width = Number(image.width);\n        const height = Number(image.height);\n        console.log(width, height);\n\n        regions.forEach(region => {\n\n            const box = {};\n            const boundingBox = region.region_info.bounding_box;\n            box.topRow = (boundingBox.top_row * height).toFixed(3);\n            box.leftCol = (boundingBox.left_col * width).toFixed(3);\n            box.bottomRow = (height*boundingBox.bottom_row).toFixed(3);\n            box.rightCol = (width*boundingBox.right_col).toFixed(3);\n            boxes.push(box);\n        });\n        console.log(\"calculateFaceLocation boxes: \", boxes);\n        return boxes;\n    }\n\n    displayFaceBox = (box) => {\n        console.log(\"displayFaceBox received box: \", box);\n        console.log(\"displayFaceBox this.state.box before state change: \", this.state.box);\n        // this.setState({ box: box });\n        this.setState({ box }, () => {\n            console.log(\"displayFaceBox this.state.box after setState: \", this.state.box);\n        });\n    }\n\n    onInputChange = (event) => {\n        this.setState({ input: event.target.value });\n    }\n\n    onButtonSubmit = () => {\n        this.setState({ imageUrl: this.state.input });\n        fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", returnClarifyRequestOptions(this.state.input))\n            .then(response => response.json())\n            .then(result => {this.displayFaceBox(this.calculateFaceLocation(result));})\n            .catch(error => console.log('error', error));;\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <ParticleComponent />\n                <Navigation />\n                <Signin />\n                <Logo />\n                <Rank />\n                <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n                <FaceRecognition boxes={this.state.box} imageUrl={this.state.imageUrl} />\n            </div>\n        );\n    }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}